Egyszerû cserés rendezés: 
	elõfeltétel egy N elemû feltöltött tömb, vagyis elemtípus: T[0..N-1], valamint egész: N.
	Növekvõ, vagy csökkenõ sorrendbe rendezzük a tömb elemeit. Ez minden olyan tömbnél mûködnie kell, ami egyszerû adattípusokat tárol.
	Mûködnie kell azon tömbökre is, mely osztállyal, vagy struktúrával létrehozott elemeket tárol, feltéve, hogy az o., vagy s. tartalmaz egyszerû adattípust.
	Alapelve:
		Felveszünk egy elemet (elõször a tömb legelsõ elemét), összehasonlítjuk a mögötte lévõkkel, és ha szükséges cserét hajtunk végre.
	
	Eljárás EgyszeruCseres_Rendezes(elemtípus: T[0..N-1], egész: N)
	változó i, j: egész

	Eljárás kezdete
		Ciklus i = 0-tól N-2-ig ismétel
			Ciklus j = i+1-tõl N-1-ig ismétel
				Ha T[i]>T[j] akkor
					Csere(T[i],T[j])
				Elágazás vége
			Ismétlés vége
		Ismétlés vége
	Eljárás vége

Buborékrendezés:
	elõfeltétel ugyanaz mint az ECS-nél
	Alapelve:
		Végigmegyünk a szomszédos elemeken, és ha kell cseréljük õket. Hagyományosan a Buborék a külsõ ciklust csökkenõként, a belsõt növekvõként használja.

	Eljárás Buborek(elemtípus: T[0..N-1], egész: N)
	változó i,j: egész

	Eljárás kezdete
		Ciklus i = N-1-tõl 1-ig ismétel lépésköz = -1
			Ciklus j = 0-tól i-1-ig ismétel
				Ha T[j] > T[j+1] akkor
					Csere(T[j], T[j+1])
				Elágazás vége
			Ismétlés vége
		Ismétlés vége
	Eljárás vége

Min-max rendezés:
	elõfeltétel ugyanaz mint az ECS-nél
	Alapelve:
		ugyanaz mint az ECS-nél, de itt csak egyszer cserélünk egy belsõ ciklus lefolyása alatt (után)
	
	Eljárás MinMax(elemtípus: T[0..N-1], egész: N)
	változó i,j, min: egész
	
	Eljárás kezdete
		Ciklus i = 0-tól N-2-ig ismétel
			min = i
			Ciklus j = i+1-tõl N-1-ig ismétel
				Ha T[i] > T[j] akkor
					min = j
				Elágazás vége
			Ciklus vége
			Csere(T[i], T[min])
		Ismétlés vége
	Eljárás vége



	|   Egyszerû cserés rendezés	|			|	  Buborék rendezés		|
	
	0	1	2	3	4	5		i	j			0	1	2	3	4	5		i	j			
	40	20	60	10	50	30		0	1			40	20	60	10	50	30		5	0
	20	40	60	10	50	30		0	2			20	40	60	10	50	30		5	1	
	20	40	60	10	50	30		0	3			20	40	60	10	50	30		5	2
	10	40	60	20	50	30		0	4			20	40	10	60	50	30		5	3
	10	40	60	20	50	30		0	5			20	40	10	50	60	30		5	4
	10	40	60	20	50	30		1	2			20	40	10	50	30	60		4	0
	10	40	60	20	50	30		1	3			20	40	10	50	30	60		4	1
	10	20	60	40	50	30		1	4			20	10	40	50	30	60		4	2
	10	20	60	40	50	30		1	5			20	10	40	50	30	60		4	3
	10	20	60	40	50	30		2	3			20	10	40	30	50	60		3	0
	10	20	40	60	50	30		2	4			10	20	40	30	50	60		3	1
	10	20	40	60	50	30		2	5			10	20	40	30	50	60		3	2
	10	20	30	60	50	40		3	4			10	20	30	40	50	60
	10	20	30	50	60	40		3	5					
	10	20	30	40	60	50		4	5
	10	20	30	40	50	60

